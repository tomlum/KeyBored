{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"book",
				"bookDropScale"
			],
			[
				"sigil",
				"sigilrotation"
			],
			[
				"healthbar",
				"health_bar_height"
			],
			[
				"too_",
				"too_dark"
			],
			[
				"right",
				"right_color_flash"
			],
			[
				"camwob",
				"camwobvflip"
			],
			[
				"polyg",
				"love.graphics.polygon"
			],
			[
				"func",
				"function\tfunction"
			],
			[
				"h",
				"h1\tTag"
			],
			[
				"numb",
				"numberOfLasers"
			],
			[
				"t",
				"t"
			],
			[
				"a21",
				"a21r"
			],
			[
				"mes",
				"mesywait"
			],
			[
				"me",
				"mesywait"
			],
			[
				"contro",
				"controller2"
			],
			[
				"cont",
				"controller1"
			],
			[
				"y",
				"ypshhold"
			],
			[
				"con",
				"controller1"
			],
			[
				"jump",
				"jumpd"
			],
			[
				"m",
				"m"
			],
			[
				"yyy",
				"yyy"
			],
			[
				"contr",
				"controller2"
			],
			[
				"set",
				"setPitch"
			],
			[
				"slide",
				"slide2"
			],
			[
				"wa",
				"wa"
			],
			[
				"youcam",
				"youcamlwall"
			],
			[
				"mecam",
				"mecamlwall"
			],
			[
				"if",
				"if"
			],
			[
				"mec",
				"mecamlwall"
			],
			[
				"sc",
				"screenheight"
			],
			[
				"screen",
				"screenwidth"
			],
			[
				"feet",
				"feet2bottom"
			],
			[
				"x",
				"x"
			],
			[
				"spik",
				"spikes"
			],
			[
				"bcs",
				"bcs"
			],
			[
				"left",
				"leftx"
			],
			[
				"a",
				"a"
			],
			[
				"gree",
				"greenpurpthrow"
			],
			[
				"pw",
				"pw"
			],
			[
				"charge",
				"chargespikedur"
			],
			[
				"bolt",
				"boltrelease"
			],
			[
				"you",
				"youboltchargecounter"
			],
			[
				"meblue",
				"meblue1"
			],
			[
				"bluefa",
				"bluefallend"
			],
			[
				"yo",
				"youcamfloor"
			],
			[
				"youca",
				"youcamfloor"
			],
			[
				"te",
				"tempyfol"
			],
			[
				"camera",
				"camera2"
			],
			[
				"action",
				"actionshot"
			],
			[
				"blue2",
				"blue2end"
			],
			[
				"combo",
				"combocounterme"
			],
			[
				"f",
				"f"
			],
			[
				"spike",
				"spikechargetimer"
			],
			[
				"mebolt",
				"meboltchargecounter"
			],
			[
				"ch",
				"chargespike"
			],
			[
				"dodge",
				"dodgetype"
			],
			[
				"del",
				"delayycounter"
			],
			[
				"delay",
				"delaymecounter"
			],
			[
				"airbolt",
				"airbolt"
			],
			[
				"attack",
				"attacknumber"
			],
			[
				"fist",
				"fistcharged"
			],
			[
				"attac",
				"attacknumber"
			],
			[
				"light",
				"lights"
			],
			[
				"walk",
				"walktimery"
			],
			[
				"wal",
				"walktimery"
			],
			[
				"v",
				"v"
			],
			[
				"g",
				"g"
			],
			[
				"n",
				"n"
			]
		]
	},
	"buffers":
	[
		{
			"file": "main.lua",
			"settings":
			{
				"buffer_size": 1673,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "notes.txt",
			"settings":
			{
				"buffer_size": 337,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "minigames/bcoe/g1_main.lua",
			"settings":
			{
				"buffer_size": 4958,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 474 files for \"Tserial\" (whole word)\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/demo.love:\n    <binary>\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/menus/menu.lua:\n   42:     love.filesystem.write(\"Save.lua\", Tserial.pack(save))\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/minigames.lua:\n   10: \tsave = Tserial.unpack(love.filesystem.read(\"Save.lua\"))\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/Tserial.lua:\n    1: --- Tserial v1.5, a simple table serializer which turns tables into Lua script\n    3: Tserial = {}\n    4: TSerial = Tserial   -- for backwards-compatibility\n   13: function Tserial.pack(t, drop, indent)\n   14:     assert(type(t) == \"table\", \"Can only Tserial.pack tables.\")\n   23:         elseif tk == \"table\" then k = \"[\"..Tserial.pack(k, drop, indent and indent+1)..\"]\"\n   26:         else error(\"Attempted to Tserial.pack a table with an invalid key: \"..tostring(k))\n   32:         elseif tv == \"table\" then v = Tserial.pack(v, drop, indent and indent+1)\n   35:         else error(\"Attempted to Tserial.pack a table with an invalid value: \"..tostring(v))\n   48: --- Loads a table into memory from a string (like those output by Tserial.pack)\n   52: function Tserial.unpack(s, safe)\n   54:     assert(type(s) == \"string\", \"Can only Tserial.unpack strings.\")\n   55:     local f, result = loadstring(\"Tserial.table=\"..s)\n   58:     local t = Tserial.table\n   59:     Tserial.table = nil\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/utilities/Tserial.lua:\n    1: --- Tserial v1.5, a simple table serializer which turns tables into Lua script\n    3: Tserial = {}\n    4: TSerial = Tserial   -- for backwards-compatibility\n   13: function Tserial.pack(t, drop, indent)\n   14:     assert(type(t) == \"table\", \"Can only Tserial.pack tables.\")\n   23:         elseif tk == \"table\" then k = \"[\"..Tserial.pack(k, drop, indent and indent+1)..\"]\"\n   26:         else error(\"Attempted to Tserial.pack a table with an invalid key: \"..tostring(k))\n   32:         elseif tv == \"table\" then v = Tserial.pack(v, drop, indent and indent+1)\n   35:         else error(\"Attempted to Tserial.pack a table with an invalid value: \"..tostring(v))\n   48: --- Loads a table into memory from a string (like those output by Tserial.pack)\n   52: function Tserial.unpack(s, safe)\n   54:     assert(type(s) == \"string\", \"Can only Tserial.unpack strings.\")\n   55:     local f, result = loadstring(\"Tserial.table=\"..s)\n   58:     local t = Tserial.table\n   59:     Tserial.table = nil\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/utilities/utilities.lua:\n    8: require \"utilities/Tserial\"\n\n39 matches across 6 files\n\n\nSearching 474 files for \"Tserial\" (whole word)\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/demo.love:\n    <binary>\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/menus/menu.lua:\n   42:     love.filesystem.write(\"Save.lua\", Tserial.pack(save))\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/minigames.lua:\n   10: \tsave = Tserial.unpack(love.filesystem.read(\"Save.lua\"))\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/Tserial.lua:\n    1: --- Tserial v1.5, a simple table serializer which turns tables into Lua script\n    3: Tserial = {}\n    4: TSerial = Tserial   -- for backwards-compatibility\n   13: function Tserial.pack(t, drop, indent)\n   14:     assert(type(t) == \"table\", \"Can only Tserial.pack tables.\")\n   23:         elseif tk == \"table\" then k = \"[\"..Tserial.pack(k, drop, indent and indent+1)..\"]\"\n   26:         else error(\"Attempted to Tserial.pack a table with an invalid key: \"..tostring(k))\n   32:         elseif tv == \"table\" then v = Tserial.pack(v, drop, indent and indent+1)\n   35:         else error(\"Attempted to Tserial.pack a table with an invalid value: \"..tostring(v))\n   48: --- Loads a table into memory from a string (like those output by Tserial.pack)\n   52: function Tserial.unpack(s, safe)\n   54:     assert(type(s) == \"string\", \"Can only Tserial.unpack strings.\")\n   55:     local f, result = loadstring(\"Tserial.table=\"..s)\n   58:     local t = Tserial.table\n   59:     Tserial.table = nil\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/utilities/Tserial.lua:\n    1: --- Tserial v1.5, a simple table serializer which turns tables into Lua script\n    3: Tserial = {}\n    4: TSerial = Tserial   -- for backwards-compatibility\n   13: function Tserial.pack(t, drop, indent)\n   14:     assert(type(t) == \"table\", \"Can only Tserial.pack tables.\")\n   23:         elseif tk == \"table\" then k = \"[\"..Tserial.pack(k, drop, indent and indent+1)..\"]\"\n   26:         else error(\"Attempted to Tserial.pack a table with an invalid key: \"..tostring(k))\n   32:         elseif tv == \"table\" then v = Tserial.pack(v, drop, indent and indent+1)\n   35:         else error(\"Attempted to Tserial.pack a table with an invalid value: \"..tostring(v))\n   48: --- Loads a table into memory from a string (like those output by Tserial.pack)\n   52: function Tserial.unpack(s, safe)\n   54:     assert(type(s) == \"string\", \"Can only Tserial.unpack strings.\")\n   55:     local f, result = loadstring(\"Tserial.table=\"..s)\n   58:     local t = Tserial.table\n   59:     Tserial.table = nil\n\n/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/utilities/utilities.lua:\n    8: require \"utilities/Tserial\"\n\n39 matches across 6 files\n",
			"settings":
			{
				"buffer_size": 5262,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "utilities/utilities.lua",
			"settings":
			{
				"buffer_size": 675,
				"line_ending": "Unix"
			}
		},
		{
			"file": "minigames.lua",
			"settings":
			{
				"buffer_size": 846,
				"line_ending": "Unix"
			}
		},
		{
			"file": "menus/menu.lua",
			"settings":
			{
				"buffer_size": 1626,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "commonUtilities.lua",
			"settings":
			{
				"buffer_size": 2153,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 307.0,
		"last_filter": "open r",
		"selected_items":
		[
			[
				"open r",
				"PackageResourceViewer: Open Resource"
			],
			[
				"browse",
				"Preferences: Browse Packages"
			],
			[
				"packageresou",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packageresour",
				"PackageResourceViewer: Open Resource"
			],
			[
				"open",
				"PackageResourceViewer: Open Resource"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"rem",
				"Package Control: Remove Package"
			],
			[
				"",
				"Indentation: Reindent Lines"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"latex",
				"LaTeXTools: Reconfigure and migrate settings"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 159.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"Love2D",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium"
	],
	"file_history":
	[
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/minigames.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/menus/select.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/menus/results.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/menus/pause.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/minigames/lb/g3_main.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/minigames/wntt/g4_main.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/utilities/utilities.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/players.lua",
		"/Users/Hi/Library/Application Support/Sublime Text 3/Packages/Lua Love/LuaLove.sublime-build",
		"/Users/Hi/Desktop/tabs",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/AmericanTypewriter.ttc",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/minigames/lb/g4_main.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/minigames/ascii/g2_main.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/menus/menu.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/minigames/bcoe/g1_main.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/main.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/Hitman Dating Sim",
		"/Users/Hi/Desktop/Thesis Thoughts",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/menus/title.lua",
		"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium/Don't Tread on me/main.lua",
		"/Users/Hi/Desktop/INDIE BREW 2.0",
		"/Users/Hi/Desktop/Cogs CS",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/minigames.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/main.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/minigames/bcoe/g1_main.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/minigames/ascii/g2_main.lua",
		"/Users/Hi/Desktop/The Deal/player.lua",
		"/Users/Hi/Desktop/The Deal/main.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/menus/results.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/menus/menu.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/Tserial.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/menus/pause.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/utilities/utilities.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/Don't Tread on me/main.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/utilities/colorSwap.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/Don't Tread on me/colorSwap.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/utilities.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/menus/select.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/minigames/bcoe/original/tricks.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/ser.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/minigames/bcoe/original/main.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/menus/title.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/simpleScale.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/players.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/menus/switch.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/effects.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/menu.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/minigames/bcoe/tricks.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/hsb.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/camera.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/minigames/bcoe/utilities.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/commonUtilities.lua",
		"/Users/Hi/Desktop/Ideas for ResearchMethods",
		"/Users/Hi/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Hi/Desktop/Group8 temp.csv",
		"/Users/Hi/Desktop/Indie Brew/Utilities/colorSwap/colorSwap.lua",
		"/Users/Hi/Desktop/Indie Brew/Imaginarium/Don't Tread on me/footAnimation.lua",
		"/Users/Hi/Desktop/Neil Harbisson",
		"/Users/Hi/Desktop/Indie Brew/Releasing",
		"/Users/Hi/Desktop/P&A/J&H.c",
		"/Users/Hi/Desktop/MECHANICAL FEELINGS/Source/main.lua",
		"/Users/Hi/Desktop/Game/ADA/main.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/ai.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/colors/green.lua",
		"/Users/Hi/Desktop/Game/ADA/sounds/sounds.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/attack.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/colors/red.lua",
		"/Users/Hi/Desktop/Game/ADA/menus.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/colors/orange.lua",
		"/Users/Hi/Desktop/Game/ADA/utilities/initializers.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/colorcontrol.lua",
		"/Users/Hi/Desktop/Game/ADA/utilities/joysticks.lua",
		"/Users/Hi/Desktop/Game/ADA/utilities/monitors.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/damageTable.lua",
		"/Users/Hi/Desktop/Game/ADA/utilities/camera.lua",
		"/Users/Hi/Desktop/Game/ADA/animation/animation.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/stages.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/fizix.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/colors/purple.lua",
		"/Users/Hi/Desktop/main.lua",
		"/Users/Hi/Desktop/J&H/J&H.c",
		"/Users/Hi/Desktop/Game/ADA/utilities/utilities.lua",
		"/Users/Hi/Desktop/Game/ADA/utilities/xkcdcolor.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/play.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/hits.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/colors/blue.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/gameModes/koth.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/gameModes/fractal.lua",
		"/Users/Hi/Desktop/Game/ADA/animation/blossom.lua",
		"/Users/Hi/Desktop/Game/ADA/combat/lasso.lua",
		"/Users/Hi/Desktop/Game/ADA/animation/colorbox.lua",
		"/Users/Hi/Desktop/Game/ADA/menustuff.lua",
		"/Users/Hi/Desktop/Game/ADA/stages.lua",
		"/Users/Hi/Desktop/Game/ADA/animation.lua",
		"/Users/Hi/Desktop/Game/ADA/joysticks.lua",
		"/Users/Hi/Desktop/Game/ADA/music.lua",
		"/Users/Hi/Desktop/Game/ADA/initializers.lua",
		"/Users/Hi/Desktop/Game/ADA/utilities.lua",
		"/Users/Hi/Desktop/Game/ADA/camera.lua",
		"/Users/Hi/Desktop/Game/ADA/love-loader.lua",
		"/Users/Hi/Desktop/Game/ADA/play.lua",
		"/Users/Hi/Desktop/Game/ADA/damageTable.lua",
		"/Users/Hi/Desktop/Game/ADA/attack.lua",
		"/Users/Hi/Desktop/Game/ADA/blossom.lua",
		"/Users/Hi/Desktop/Game/ADA/ai.lua",
		"/Users/Hi/Desktop/Game/ADA/death.lua",
		"/Users/Hi/Desktop/Game/ADA/fizix.lua",
		"/Users/Hi/Desktop/Game/ADA/monitors.lua",
		"/Users/Hi/Desktop/Game/ADA/attacks/orange.lua",
		"/Users/Hi/Desktop/Game/ADA/hits.lua",
		"/Users/Hi/Desktop/Game/ADA/gameModes/fractal.lua",
		"/Users/Hi/Desktop/Game/ADA/gameModes/koth.lua",
		"/Users/Hi/Desktop/Game/ADA/attacks/purple.lua",
		"/Users/Hi/Desktop/Game/ADA/attacks/green.lua",
		"/Users/Hi/Desktop/Game/ADA/platforms.lua",
		"/Users/Hi/Desktop/Game/ADA/attacks/blue.lua",
		"/Users/Hi/Desktop/Game/ADA/attacks/red.lua",
		"/Users/Hi/Library/Application Support/Sublime Text 3/Packages/Lua/Indent.tmPreferences",
		"/Users/Hi/Library/Application Support/Sublime Text 3/Packages/Default/Indentation Rules - Comments.tmPreferences",
		"/Users/Hi/Desktop/Game/ADA/colorcontrol.lua",
		"/Users/Hi/Desktop/Game/ADA/enviro/colorbox.lua",
		"/Users/Hi/Desktop/Game/ADA/story/ch1/ch1.lua",
		"/Users/Hi/Desktop/Game/ADA/colorbox.lua",
		"/Users/Hi/Desktop/Game/ADA/enviro/floors.png",
		"/Users/Hi/Desktop/Game/ADA/enviro/backstreet.png",
		"/Users/Hi/Desktop/Game/ADA/untitled.lua",
		"/Users/Hi/Desktop/Game/ADA/lasso.lua",
		"/Users/Hi/Desktop/Game/ADA/meandyou.lua"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium",
			"<current file>",
			"/Users/Hi/Desktop/Indie Brew/Games/Imaginarium",
			"/Users/Hi/Desktop/Indie Brew/Imaginarium",
			"<current file>",
			"/Users/Hi/Desktop/Game/ADA",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Tserial",
			"--",
			"drawFade",
			"textinput_games",
			"keypress_games",
			"draw_games",
			"oldMenu",
			"menu",
			"Menu",
			"menu",
			"save",
			"keypressgames",
			"keypressed",
			"oldmenu",
			"backgroundHue",
			"select",
			"----------------------",
			"clickkey",
			"clickKey",
			"timer",
			"Timer",
			"timer",
			"Timer",
			"timer",
			"Timer",
			"timer",
			"Timer",
			"timer",
			"readytimer",
			"trysleft",
			"trysLeft",
			"lb",
			"clockmask",
			"background",
			"600",
			"dot",
			"rectangle",
			"graduating",
			"reset",
			"nextTurn",
			"finishtime",
			"reset",
			"darktime",
			"rectangle",
			"setBackgroundColor",
			"currentTry",
			"cinemaTimer",
			"endtime",
			"endtimer",
			"cinemaTimer",
			"endtime",
			"endtimer",
			"buffrevelation",
			"zoomy",
			"rectangle",
			"background",
			"800",
			"500",
			"800",
			"255",
			"zoom",
			"translate",
			"5",
			"font",
			"failure",
			"faliure",
			"wrongchar",
			"+cu.floRan(-3,3)",
			"font",
			"failure",
			"rectangle",
			"addsweat",
			"10*,",
			"10*",
			"math.random",
			"addsweat",
			"drawsweat",
			"drawseat",
			"addsweat",
			"*4",
			"addsweat",
			"inset",
			"currentSentence",
			"sentences",
			"37",
			"140/2",
			"failure =",
			"failure -",
			"secondDuration",
			"secondIntervals",
			"60",
			"titlefont",
			"font",
			"10",
			"math.random(-currentChar/10,currentChar/10)",
			"char",
			"from a certain",
			"timer",
			"sentences",
			"clickKey",
			"isClick",
			"isclick",
			"currentSentence",
			"g2_load",
			"SIMPLESCALE",
			"number_of_games",
			"= \"PLAY",
			"fade =",
			"fade ",
			"num",
			"number",
			"textinput",
			"bcoe",
			"g1",
			"currentplayer",
			"winner",
			"game",
			"setPlayerColor",
			"setcolor",
			"setplayer",
			"colorswap",
			"kiwi",
			"colorswap",
			"playerNum",
			"setPlayerColor",
			"unset",
			"playerColor",
			"playerColors"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"textinputGames",
			"keypressGames",
			"drawGames",
			"oldMode",
			"clock",
			"numberOfGames",
			"g1_nextTurn",
			"menuSwitch",
			"bandy",
			"draw_trails",
			"draw_controllers",
			"infinite_pan",
			"spin_sigil",
			"sigil_rot",
			"sigil_fade",
			"greenk1",
			"map_num",
			"drawMenus",
			"old_health",
			"coinFlip",
			"OLD_MODE",
			"num_of_modes",
			"the_maps",
			"the_map",
			"images/player",
			".double_down ",
			"doubleDown",
			"radialpush",
			"hls2rgb",
			"lg.newImage(\"images/",
			"num_of_colors",
			"menu_speed",
			"letter_box_height",
			"lofgz",
			"math.min(",
			"math.max",
			"1",
			"lassoScreen",
			"checkForControllers",
			"playheight",
			"winheight",
			"vertebrae",
			"im.vertebrae",
			"buildings3",
			"buildings2",
			"buildings1",
			"camera_center_offset",
			"camera_separation_x",
			"retryim",
			"waveim",
			"health_bar_height",
			".setColor",
			"t_setColor",
			"r2b",
			"orient",
			"dodging",
			"game_mode",
			"MODE",
			"modeManager",
			"drawOverlays",
			"friction",
			"finished_loading",
			"theMap",
			"updateScreenInfo",
			"randomizePitch",
			"old_health",
			"loadStage",
			"refreshMenus",
			"initMenus",
			"initMenu",
			"oldcolor",
			"moveTOD",
			"wall_grab",
			"gavinAndDan",
			"slow_mo_t",
			"walljumpj",
			"lineWallCheck",
			"linePlatCheck",
			"wallRubbleCheck",
			"makeRubble",
			"changePlayerColor",
			"changeColor",
			"colorChanging",
			"colorChange",
			"camwob_max",
			"max_camwob",
			"max_cam_wob",
			"at.p.k.ft",
			"at.p.u.range",
			".hit_a_box",
			"xx.go_here",
			".attack_num",
			"old_feet",
			"go_here",
			"go_here_d",
			"can_super_jump",
			"landing_counter",
			"hexPlat",
			"retOWallCheck",
			"hexRadial",
			"drawHexCheck",
			"drawHexBoxes",
			"hexCheck",
			"hexDistance",
			"dodge_width",
			"hexHit",
			"monsters",
			"dodge_height",
			"extra_height",
			".is_player",
			"releaseblock",
			"let_go_of_block",
			"setColor(",
			"setColor",
			"floRan",
			"land_pause_time",
			"short_land_wait",
			"landing_wait",
			"landing_fric",
			"j_for_landing",
			"fractal_lives",
			"fractal_max_health",
			"wall_jump_range",
			"v_for_wall_flinch",
			"wave_frame_rate",
			"spark_intensity",
			"combo_pause",
			"bolts_fly_relative"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "main.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1673,
						"regions":
						{
						},
						"selection":
						[
							[
								157,
								157
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "notes.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 337,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							],
							[
								23,
								23
							],
							[
								40,
								40
							],
							[
								78,
								78
							],
							[
								83,
								83
							],
							[
								128,
								128
							],
							[
								185,
								185
							],
							[
								317,
								317
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "minigames/bcoe/g1_main.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4958,
						"regions":
						{
						},
						"selection":
						[
							[
								202,
								202
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5262,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										228,
										235
									],
									[
										326,
										333
									],
									[
										447,
										454
									],
									[
										529,
										536
									],
									[
										549,
										556
									],
									[
										559,
										566
									],
									[
										616,
										623
									],
									[
										694,
										701
									],
									[
										767,
										774
									],
									[
										855,
										862
									],
									[
										958,
										965
									],
									[
										1041,
										1048
									],
									[
										1174,
										1181
									],
									[
										1204,
										1211
									],
									[
										1277,
										1284
									],
									[
										1344,
										1351
									],
									[
										1385,
										1392
									],
									[
										1410,
										1417
									],
									[
										1512,
										1519
									],
									[
										1594,
										1601
									],
									[
										1614,
										1621
									],
									[
										1624,
										1631
									],
									[
										1681,
										1688
									],
									[
										1759,
										1766
									],
									[
										1832,
										1839
									],
									[
										1920,
										1927
									],
									[
										2023,
										2030
									],
									[
										2106,
										2113
									],
									[
										2239,
										2246
									],
									[
										2269,
										2276
									],
									[
										2342,
										2349
									],
									[
										2409,
										2416
									],
									[
										2450,
										2457
									],
									[
										2475,
										2482
									],
									[
										2594,
										2601
									],
									[
										2860,
										2867
									],
									[
										2958,
										2965
									],
									[
										3079,
										3086
									],
									[
										3161,
										3168
									],
									[
										3181,
										3188
									],
									[
										3191,
										3198
									],
									[
										3248,
										3255
									],
									[
										3326,
										3333
									],
									[
										3399,
										3406
									],
									[
										3487,
										3494
									],
									[
										3590,
										3597
									],
									[
										3673,
										3680
									],
									[
										3806,
										3813
									],
									[
										3836,
										3843
									],
									[
										3909,
										3916
									],
									[
										3976,
										3983
									],
									[
										4017,
										4024
									],
									[
										4042,
										4049
									],
									[
										4144,
										4151
									],
									[
										4226,
										4233
									],
									[
										4246,
										4253
									],
									[
										4256,
										4263
									],
									[
										4313,
										4320
									],
									[
										4391,
										4398
									],
									[
										4464,
										4471
									],
									[
										4552,
										4559
									],
									[
										4655,
										4662
									],
									[
										4738,
										4745
									],
									[
										4871,
										4878
									],
									[
										4901,
										4908
									],
									[
										4974,
										4981
									],
									[
										5041,
										5048
									],
									[
										5082,
										5089
									],
									[
										5107,
										5114
									],
									[
										5226,
										5233
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								5229,
								5229
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 2,
							"result_base_dir": "",
							"result_file_regex": "^([^ \t].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 3034.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "utilities/utilities.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 675,
						"regions":
						{
						},
						"selection":
						[
							[
								106,
								106
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "minigames.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 846,
						"regions":
						{
						},
						"selection":
						[
							[
								265,
								265
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "menus/menu.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1626,
						"regions":
						{
						},
						"selection":
						[
							[
								269,
								269
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "commonUtilities.lua",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2153,
						"regions":
						{
						},
						"selection":
						[
							[
								134,
								134
							]
						],
						"settings":
						{
							"syntax": "Packages/Lua/Lua.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 33.0
	},
	"input":
	{
		"height": 35.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 113.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Love.sublime-build",
	"project": "Imaginarium.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"g1_",
				"minigames/bcoe/g1_main.lua"
			],
			[
				"",
				"AmericanTypewriter.ttc"
			],
			[
				"minigames",
				"minigames.lua"
			],
			[
				"player",
				"players.lua"
			],
			[
				"players",
				"players.lua"
			],
			[
				"utilities",
				"utilities/utilities.lua"
			],
			[
				"colorcon",
				"ADA/combat/colorcontrol.lua"
			],
			[
				"ru",
				"/Users/Hi/Desktop/Game/main.lua"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/Desktop/Test/test.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"ColorChange"
			]
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 158.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
